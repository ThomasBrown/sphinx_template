<?php
include realpath( dirname(__FILE__).'/../inc/template.inc.php' );
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-06-02 at 02:23:07.
 */
class TemplateTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var Template
     */
    protected $template;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->template = new Template;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Template::setBaseTemplatePath
     */
    public function testSetBaseTemplatePath()
    {
        $this->template->setBaseTemplatePath('test/path');

        $this->assertEquals( 'test/path', $this->template->getBaseTemplatePath() );

        $this->template->setBaseTemplatePath('inc/tpl2/');
        ob_start();
        $this->template->setTemplateFile('footer2')->render();
        $output = ob_get_clean();

        $this->assertEquals( 'Second footer', $output );
    }

    /**
     * @covers Template::testGetBaseTemplatePath
     */
    public function testGetBaseTemplatePath()
    {
        $this->assertEquals( 'inc/tpl/', $this->template->getBaseTemplatePath() );
    }

    /**
     * @covers Template::setTemplateFile
     */
    public function testSetTemplateFile()
    {
        $this->template->setTemplateFile('message');

        $this->assertEquals('message.php', $this->template->getTemplateFile());
    }

    /**
     * @covers Template::setVariables
     */
    public function testSetVariables()
    {
        $variables = array( 'message' => 'test' );
        $this->template->setVariables( $variables );

        $this->assertEquals( $variables, $this->template->getVariables() );
    }

    /**
     * @covers Template::render
     */
    public function testRender()
    {
        $template = $this->template;

        $template->setTemplateFile('base');
        $template->setVariables(array('title' => 'Some nice title' ));
        $template->setVariableFromTemplate( 'nav', 'stores/nav');
        $template->setVariableFromTemplate( 'content', 'inc/tpl/stores/lorem.php');
        $template->setVariableFromTemplate( 'fromFile', '../tpl2/footer2');

        ob_start();
        $template->render();
        $output = ob_get_clean();

        $html = <<<HTML
<html>
<head>
	<title>Some nice title</title>
</head>
<body>
	<nav>
		<ul>
	<li>
		<a href="#">1</a>
	</li>
	<li>
		<a href="#">11</a>
	</li>
	<li>
		<a href="#">111</a>
	</li>
	<li>
		<a href="#">1111</a>
	</li>
	<li>
		<a href="#">11111</a>
	</li>
	<li>
		<a href="#">111111</a>
	</li>
</ul>
	</nav>
	Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod
tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,
quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo
consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse
cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non
proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
	<hr>
	Second footer
HTML;


        $this->assertContains( $html, $output );
    }

    /**
     * @covers Template::setVariableFromTemplate
     */
    public function testSetVariableFromTemplate()
    {
        $this->template->setVariableFromTemplate('header', 'header');
        $this->template->setVariableFromTemplate('footer', dirname(__FILE__).'/inc/tpl/footer.php', TRUE );

        $variables = $this->template->getVariables();

        $header = $variables[ 'header' ];

        $this->assertNotEmpty( $header );
        $this->assertEquals('This is a header', $header );
    }

    /**
     * @covers Template::factory
     */
    public function testFactory()
    {
        ob_start();
        Template::factory( 'message', array('message' => 'test message', 'title' => 'Some nice title' ) )
            ->setVariableFromTemplate('header', 'inc/tpl/header.php' )
            ->render();
        $output = ob_get_clean();

        $this->assertContains( "<h1>Some nice title</h1>
<p>test message</p>", $output );
    }
}
